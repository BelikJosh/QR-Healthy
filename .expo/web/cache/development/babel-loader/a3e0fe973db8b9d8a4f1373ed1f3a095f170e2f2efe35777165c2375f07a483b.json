{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\josue\\\\mp5\\\\App.tsx\",\n  _this = this;\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar App = function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    darkMode = _useState2[0],\n    setDarkMode = _useState2[1];\n  var toggleDarkMode = function toggleDarkMode() {\n    setDarkMode(function (prevMode) {\n      return !prevMode;\n    });\n  };\n  return _jsxDEV(View, {\n    style: [styles.container, {\n      backgroundColor: darkMode ? '#333' : '#fff'\n    }],\n    children: [_jsxDEV(StatusBar, {\n      barStyle: darkMode ? 'light-content' : 'dark-content'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, _this), _jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(Text, {\n        style: [styles.headerText, {\n          color: darkMode ? '#fff' : '#333'\n        }],\n        children: darkMode ? 'Modo Oscuro' : 'Modo Claro'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, _this), _jsxDEV(TouchableOpacity, {\n        onPress: toggleDarkMode,\n        children: _jsxDEV(Text, {\n          style: styles.buttonText,\n          children: darkMode ? 'Cambiar a Modo Claro' : 'Cambiar a Modo Oscuro'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, _this), _jsxDEV(View, {\n      style: styles.main,\n      children: _jsxDEV(Text, {\n        style: [styles.contentText, {\n          color: darkMode ? '#fff' : '#333'\n        }],\n        children: \"Contenido de la aplicaci\\xF3n.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 50\n  },\n  header: {\n    padding: 20,\n    alignItems: 'center'\n  },\n  headerText: {\n    fontSize: 24\n  },\n  buttonText: {\n    fontSize: 18,\n    color: '#007bff',\n    marginTop: 10\n  },\n  main: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  contentText: {\n    fontSize: 20\n  }\n});\nexport default App;\n{}","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","StyleSheet","StatusBar","jsxDEV","_jsxDEV","App","_useState","_useState2","_slicedToArray","darkMode","setDarkMode","toggleDarkMode","prevMode","style","styles","container","backgroundColor","children","barStyle","fileName","_jsxFileName","lineNumber","columnNumber","_this","header","headerText","color","onPress","buttonText","main","contentText","create","flex","paddingTop","padding","alignItems","fontSize","marginTop","justifyContent"],"sources":["C:/Users/josue/mp5/App.tsx"],"sourcesContent":["\nimport { config } from '@gluestack-ui/config';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { useNavigation } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { DrawerContent, DrawerItem, createDrawerNavigator } from '@react-navigation/drawer';\nimport categorias from './components/Inicio';\nimport configuracion_usuario from './components/configuracion_usuario';\nimport { Button, Headline } from 'react-native-paper';\nimport modo from './components/modo_oscuro';\nimport React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, StatusBar } from 'react-native';\n\nconst App = () => {\n  const [darkMode, setDarkMode] = useState<boolean>(false);\n\n  const toggleDarkMode = () => {\n    setDarkMode(prevMode => !prevMode);\n  };\n\n  return (\n    <View style={[styles.container, { backgroundColor: darkMode ? '#333' : '#fff' }]}>\n      <StatusBar barStyle={darkMode ? 'light-content' : 'dark-content'} />\n      <View style={styles.header}>\n        <Text style={[styles.headerText, { color: darkMode ? '#fff' : '#333' }]}>\n          {darkMode ? 'Modo Oscuro' : 'Modo Claro'}\n        </Text>\n        <TouchableOpacity onPress={toggleDarkMode}>\n          <Text style={styles.buttonText}>\n            {darkMode ? 'Cambiar a Modo Claro' : 'Cambiar a Modo Oscuro'}\n          </Text>\n        </TouchableOpacity>\n      </View>\n      <View style={styles.main}>\n        <Text style={[styles.contentText, { color: darkMode ? '#fff' : '#333' }]}>\n          Contenido de la aplicaci√≥n.\n        </Text>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 50,\n  },\n  header: {\n    padding: 20,\n    alignItems: 'center',\n  },\n  headerText: {\n    fontSize: 24,\n  },\n  buttonText: {\n    fontSize: 18,\n    color: '#007bff',\n    marginTop: 10,\n  },\n  main: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  contentText: {\n    fontSize: 20,\n  },\n});\n\nexport default App;\n\n{/* \n\nconst Drawer = createDrawerNavigator();\n\nconst Mycomponent =()=>(\n<DrawerItem label={\"first item\"} onPress={function (): void {\n    throw new Error('Function not implemented.');\n  } }/>\n\n)\nexport default function App() {\n  \n  return( \n    \n  <NavigationContainer>\n  <GluestackUIProvider config={config}>\n\n  <Drawer.Navigator initialRouteName=\"Home\">\n      \n        <Drawer.Screen name=\"Inicio\" component={categorias}/>\n        <Drawer.Screen name=\"Configuracion\" component={configuracion_usuario}/> \n       \n      </Drawer.Navigator>\n\n\n  \n</GluestackUIProvider>\n</NavigationContainer>);\n\n\n};\n\n*/}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}