{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\josue\\\\mp5\\\\components\\\\login.tsx\",\n  _this = this;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from \"react\";\nimport { FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, Input, InputField, Button, ButtonText, AlertCircleIcon, Checkbox, Box } from '@gluestack-ui/themed';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Validar = function Validar() {\n  var selectIconSize = '';\n  var _useState = useState({\n      email: \"\",\n      password: \"\"\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    formData = _useState2[0],\n    setFormData = _useState2[1];\n  var _useState3 = useState([{\n      id: 1,\n      label: 'Opción 1',\n      checked: false\n    }, {\n      id: 2,\n      label: 'Opción 2',\n      checked: false\n    }, {\n      id: 3,\n      label: 'Opción 3',\n      checked: false\n    }]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    checkboxes = _useState4[0],\n    setCheckboxes = _useState4[1];\n  var isFormValid = formData.email.length >= 6 && formData.password.length >= 6;\n  var handleInputChange = function handleInputChange(field, value) {\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, _defineProperty({}, field, value)));\n  };\n  var handleCheckboxChange = function handleCheckboxChange(id) {\n    setCheckboxes(function (prevCheckboxes) {\n      return prevCheckboxes.map(function (checkbox) {\n        return checkbox.id === id ? _objectSpread(_objectSpread({}, checkbox), {}, {\n          checked: !checkbox.checked\n        }) : checkbox;\n      });\n    });\n  };\n  var handleSubmit = function handleSubmit() {\n    if (isFormValid) {\n      console.log(\"Form submitted\", formData, checkboxes);\n    } else {\n      console.log(\"Form is invalid\");\n    }\n  };\n  function handleRadioChange(isSelected) {\n    throw new Error('Function not implemented.');\n  }\n  return _jsxDEV(Box, {\n    borderColor: \"darkBlue200\",\n    borderWidth: '$1',\n    p: '$1',\n    borderRadius: '$lg',\n    backgroundColor: \"white\",\n    alignItems: \"center\",\n    children: _jsxDEV(FormControl, {\n      isInvalid: !isFormValid,\n      size: \"lg\",\n      isDisabled: false,\n      isRequired: true,\n      children: [_jsxDEV(FormControlLabel, {\n        children: _jsxDEV(FormControlLabelText, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, _this), _jsxDEV(Input, {\n        children: _jsxDEV(InputField, {\n          type: \"text\",\n          placeholder: \"Email\",\n          onChangeText: function onChangeText(value) {\n            return handleInputChange(\"email\", value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, _this), _jsxDEV(FormControlError, {\n        children: [_jsxDEV(FormControlErrorIcon, {\n          as: AlertCircleIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, _this), _jsxDEV(FormControlErrorText, {\n          children: \"At least 6 characters are required.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, _this), _jsxDEV(FormControlLabel, {\n        children: _jsxDEV(FormControlLabelText, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, _this), _jsxDEV(Input, {\n        children: _jsxDEV(InputField, {\n          type: \"password\",\n          placeholder: \"Password\",\n          onChangeText: function onChangeText(value) {\n            return handleInputChange(\"password\", value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, _this), _jsxDEV(FormControlHelper, {\n        children: _jsxDEV(FormControlHelperText, {\n          children: \"Must be at least 6 characters.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, _this), _jsxDEV(Box, {\n        children: _jsxDEV(Button, {\n          action: \"primary\",\n          variant: \"solid\",\n          size: \"lg\",\n          marginTop: 20,\n          isDisabled: !isFormValid,\n          onPress: handleSubmit,\n          children: _jsxDEV(ButtonText, {\n            children: \"Iniciar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 12\n  }, _this);\n};\nexport default Validar;","map":{"version":3,"names":["React","useState","FormControl","FormControlLabel","FormControlLabelText","FormControlHelper","FormControlHelperText","FormControlError","FormControlErrorIcon","FormControlErrorText","Input","InputField","Button","ButtonText","AlertCircleIcon","Checkbox","Box","jsxDEV","_jsxDEV","Validar","selectIconSize","_useState","email","password","_useState2","_slicedToArray","formData","setFormData","_useState3","id","label","checked","_useState4","checkboxes","setCheckboxes","isFormValid","length","handleInputChange","field","value","_objectSpread","_defineProperty","handleCheckboxChange","prevCheckboxes","map","checkbox","handleSubmit","console","log","handleRadioChange","isSelected","Error","borderColor","borderWidth","p","borderRadius","backgroundColor","alignItems","children","isInvalid","size","isDisabled","isRequired","fileName","_jsxFileName","lineNumber","columnNumber","_this","type","placeholder","onChangeText","as","action","variant","marginTop","onPress"],"sources":["C:/Users/josue/mp5/components/login.tsx"],"sourcesContent":["import { ButtonIcon, ButtonGroup, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon } from '@gluestack-ui/themed';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { Center, ChevronDownIcon, Select, SelectIcon, SelectTrigger, SelectInput, SelectPortal, SelectBackdrop, SelectContent, SelectDragIndicatorWrapper, SelectDragIndicator, SelectItem, Icon } from '@gluestack-ui/themed';\r\nimport React, { useState } from \"react\";\r\nimport { FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, Input, InputField, Button, ButtonText, AlertCircleIcon, CheckboxGroup, Checkbox, Box, Radio, RadioGroup, RadioIndicator, RadioIcon, RadioLabel, CircleIcon } from '@gluestack-ui/themed';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n\r\n\r\ninterface Checkbox {\r\n    id: number;\r\n    label: string;\r\n    checked: boolean;\r\n  }\r\n\r\nconst Validar = () =>{\r\n    let selectIconSize = '';\r\n    const [formData, setFormData] = useState({\r\n      email: \"\",\r\n      password: \"\"\r\n    });\r\n    const [checkboxes, setCheckboxes] = useState<Checkbox[]>([{\r\n      id: 1,\r\n      label: 'Opción 1',\r\n      checked: false\r\n    }, {\r\n      id: 2,\r\n      label: 'Opción 2',\r\n      checked: false\r\n    }, {\r\n      id: 3,\r\n      label: 'Opción 3',\r\n      checked: false\r\n    }]);\r\n    const isFormValid = formData.email.length >= 6 && formData.password.length >= 6;\r\n    const handleInputChange = (field: string, value: string) => {\r\n      setFormData({\r\n        ...formData,\r\n        [field]: value\r\n      });\r\n    };\r\n    const handleCheckboxChange = (id: number) => {\r\n      setCheckboxes(prevCheckboxes => prevCheckboxes.map(checkbox => checkbox.id === id ? {\r\n        ...checkbox,\r\n        checked: !checkbox.checked\r\n      } : checkbox));\r\n    };\r\n    const handleSubmit = () => {\r\n      if (isFormValid) {\r\n        console.log(\"Form submitted\", formData, checkboxes);\r\n      } else {\r\n        console.log(\"Form is invalid\");\r\n      }\r\n    };\r\n    function handleRadioChange(isSelected: any): void {\r\n      throw new Error('Function not implemented.');\r\n    }\r\n    return <Box borderColor='darkBlue200' borderWidth={'$1'} p={'$1'} borderRadius={'$lg'} backgroundColor='white'alignItems='center' >\r\n      <FormControl isInvalid={!isFormValid} size={\"lg\"} isDisabled={false} isRequired={true}>\r\n        <FormControlLabel>\r\n          <FormControlLabelText>Email</FormControlLabelText>\r\n        </FormControlLabel>\r\n        <Input>\r\n          <InputField type=\"text\" placeholder=\"Email\" onChangeText={value => handleInputChange(\"email\", value)} />\r\n        </Input>\r\n        <FormControlError>\r\n          <FormControlErrorIcon as={AlertCircleIcon} />\r\n          <FormControlErrorText>\r\n            At least 6 characters are required.\r\n          </FormControlErrorText>\r\n        </FormControlError>\r\n  \r\n        <FormControlLabel>\r\n          <FormControlLabelText>Password</FormControlLabelText>\r\n        </FormControlLabel>\r\n        <Input>\r\n          <InputField type=\"password\" placeholder=\"Password\" onChangeText={value => handleInputChange(\"password\", value)} />\r\n  \r\n        </Input>\r\n        <FormControlHelper>\r\n          <FormControlHelperText>\r\n            Must be at least 6 characters.\r\n          </FormControlHelperText>\r\n        </FormControlHelper>\r\n  \r\n  \r\n        <Box>\r\n  \r\n          <Button action={\"primary\"} variant={\"solid\"} size={\"lg\"} marginTop={20} isDisabled={!isFormValid} onPress={handleSubmit}>\r\n            <ButtonText>Iniciar</ButtonText>\r\n          </Button>\r\n          </Box>\r\n      </FormControl>\r\n  \r\n    </Box>;\r\n  \r\n};\r\n\r\n\r\nexport default Validar\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;;;;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,gBAAgB,EAAEC,oBAAoB,EAAEC,iBAAiB,EAAEC,qBAAqB,EAAEC,gBAAgB,EAAEC,oBAAoB,EAAEC,oBAAoB,EAAEC,KAAK,EAAEC,UAAU,EAAEC,MAAM,EAAEC,UAAU,EAAEC,eAAe,EAAiBC,QAAQ,EAAEC,GAAG,QAA8E,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU/V,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAQ;EACjB,IAAIC,cAAc,GAAG,EAAE;EACvB,IAAAC,SAAA,GAAgCpB,QAAQ,CAAC;MACvCqB,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAJ,SAAA;IAHKK,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAI5B,IAAAI,UAAA,GAAoC3B,QAAQ,CAAa,CAAC;MACxD4B,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,UAAU;MACjBC,OAAO,EAAE;IACX,CAAC,EAAE;MACDF,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,UAAU;MACjBC,OAAO,EAAE;IACX,CAAC,EAAE;MACDF,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,UAAU;MACjBC,OAAO,EAAE;IACX,CAAC,CAAC,CAAC;IAAAC,UAAA,GAAAP,cAAA,CAAAG,UAAA;IAZIK,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAahC,IAAMG,WAAW,GAAGT,QAAQ,CAACJ,KAAK,CAACc,MAAM,IAAI,CAAC,IAAIV,QAAQ,CAACH,QAAQ,CAACa,MAAM,IAAI,CAAC;EAC/E,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,KAAa,EAAEC,KAAa,EAAK;IAC1DZ,WAAW,CAAAa,aAAA,CAAAA,aAAA,KACNd,QAAQ,OAAAe,eAAA,KACVH,KAAK,EAAGC,KAAK,EACf,CAAC;EACJ,CAAC;EACD,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIb,EAAU,EAAK;IAC3CK,aAAa,CAAC,UAAAS,cAAc;MAAA,OAAIA,cAAc,CAACC,GAAG,CAAC,UAAAC,QAAQ;QAAA,OAAIA,QAAQ,CAAChB,EAAE,KAAKA,EAAE,GAAAW,aAAA,CAAAA,aAAA,KAC5EK,QAAQ;UACXd,OAAO,EAAE,CAACc,QAAQ,CAACd;QAAO,KACxBc,QAAQ;MAAA,EAAC;IAAA,EAAC;EAChB,CAAC;EACD,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzB,IAAIX,WAAW,EAAE;MACfY,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEtB,QAAQ,EAAEO,UAAU,CAAC;IACrD,CAAC,MAAM;MACLc,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAChC;EACF,CAAC;EACD,SAASC,iBAAiBA,CAACC,UAAe,EAAQ;IAChD,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;EAC9C;EACA,OAAOjC,OAAA,CAACF,GAAG;IAACoC,WAAW,EAAC,aAAa;IAACC,WAAW,EAAE,IAAK;IAACC,CAAC,EAAE,IAAK;IAACC,YAAY,EAAE,KAAM;IAACC,eAAe,EAAC,OAAO;IAAAC,UAAU,EAAC,QAAQ;IAAAC,QAAA,EAC/HxC,OAAA,CAAChB,WAAW;MAACyD,SAAS,EAAE,CAACxB,WAAY;MAACyB,IAAI,EAAE,IAAK;MAACC,UAAU,EAAE,KAAM;MAACC,UAAU,EAAE,IAAK;MAAAJ,QAAA,GACpFxC,OAAA,CAACf,gBAAgB;QAAAuD,QAAA,EACfxC,OAAA,CAACd,oBAAoB;UAAAsD,QAAA,EAAC;QAAK;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAsB;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAClC,CAAC,EACnBjD,OAAA,CAACR,KAAK;QAAAgD,QAAA,EACJxC,OAAA,CAACP,UAAU;UAACyD,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC,OAAO;UAACC,YAAY,EAAE,SAAAA,aAAA/B,KAAK;YAAA,OAAIF,iBAAiB,CAAC,OAAO,EAAEE,KAAK,CAAC;UAAA;QAAC;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAE;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACnG,CAAC,EACRjD,OAAA,CAACX,gBAAgB;QAAAmD,QAAA,GACfxC,OAAA,CAACV,oBAAoB;UAAC+D,EAAE,EAAEzD;QAAgB;UAAAiD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAE,CAAC,EAC7CjD,OAAA,CAACT,oBAAoB;UAAAiD,QAAA,EAAC;QAEtB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAsB,CAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACP,CAAC,EAEnBjD,OAAA,CAACf,gBAAgB;QAAAuD,QAAA,EACfxC,OAAA,CAACd,oBAAoB;UAAAsD,QAAA,EAAC;QAAQ;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAsB;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACrC,CAAC,EACnBjD,OAAA,CAACR,KAAK;QAAAgD,QAAA,EACJxC,OAAA,CAACP,UAAU;UAACyD,IAAI,EAAC,UAAU;UAACC,WAAW,EAAC,UAAU;UAACC,YAAY,EAAE,SAAAA,aAAA/B,KAAK;YAAA,OAAIF,iBAAiB,CAAC,UAAU,EAAEE,KAAK,CAAC;UAAA;QAAC;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAE;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAE7G,CAAC,EACRjD,OAAA,CAACb,iBAAiB;QAAAqD,QAAA,EAChBxC,OAAA,CAACZ,qBAAqB;UAAAoD,QAAA,EAAC;QAEvB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAuB;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACP,CAAC,EAGpBjD,OAAA,CAACF,GAAG;QAAA0C,QAAA,EAEFxC,OAAA,CAACN,MAAM;UAAC4D,MAAM,EAAE,SAAU;UAACC,OAAO,EAAE,OAAQ;UAACb,IAAI,EAAE,IAAK;UAACc,SAAS,EAAE,EAAG;UAACb,UAAU,EAAE,CAAC1B,WAAY;UAACwC,OAAO,EAAE7B,YAAa;UAAAY,QAAA,EACtHxC,OAAA,CAACL,UAAU;YAAA6C,QAAA,EAAC;UAAO;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KAAY;QAAC;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAC1B;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACJ,CAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACG;EAAC;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KAEX,CAAC;AAEV,CAAC;AAGD,eAAehD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}