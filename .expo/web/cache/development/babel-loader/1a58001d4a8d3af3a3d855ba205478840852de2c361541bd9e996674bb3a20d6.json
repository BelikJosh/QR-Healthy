{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\josue\\\\mp5\\\\components\\\\configuracion_usuario.tsx\",\n  _this = this;\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar modo_oscuro = function modo_oscuro() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    darkMode = _useState2[0],\n    setDarkMode = _useState2[1];\n  var toggleDarkMode = function toggleDarkMode() {\n    setDarkMode(function (prevMode) {\n      return !prevMode;\n    });\n  };\n  return _jsxDEV(View, {\n    style: [styles.container, {\n      backgroundColor: darkMode ? '#333' : '#fff'\n    }],\n    children: [_jsxDEV(StatusBar, {\n      barStyle: darkMode ? 'light-content' : 'dark-content'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, _this), _jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(Text, {\n        style: [styles.headerText, {\n          color: darkMode ? '#fff' : '#333'\n        }],\n        children: darkMode ? 'Modo Oscuro' : 'Modo Claro'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, _this), _jsxDEV(TouchableOpacity, {\n        onPress: toggleDarkMode,\n        children: _jsxDEV(Text, {\n          style: styles.buttonText,\n          children: darkMode ? 'Cambiar a Modo Claro' : 'Cambiar a Modo Oscuro'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, _this), _jsxDEV(View, {\n      style: styles.main,\n      children: _jsxDEV(Text, {\n        style: [styles.contentText, {\n          color: darkMode ? '#fff' : '#333'\n        }],\n        children: \"Contenido de la aplicaci\\xF3n.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 50\n  },\n  header: {\n    padding: 20,\n    alignItems: 'center'\n  },\n  headerText: {\n    fontSize: 24\n  },\n  buttonText: {\n    fontSize: 18,\n    color: '#007bff',\n    marginTop: 10\n  },\n  main: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  contentText: {\n    fontSize: 20\n  }\n});\nexport default modo_oscuro;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","StyleSheet","StatusBar","jsxDEV","_jsxDEV","modo_oscuro","_useState","_useState2","_slicedToArray","darkMode","setDarkMode","toggleDarkMode","prevMode","style","styles","container","backgroundColor","children","barStyle","fileName","_jsxFileName","lineNumber","columnNumber","_this","header","headerText","color","onPress","buttonText","main","contentText","create","flex","paddingTop","padding","alignItems","fontSize","marginTop","justifyContent"],"sources":["C:/Users/josue/mp5/components/configuracion_usuario.tsx"],"sourcesContent":["\r\nimport { GluestackUIProvider, Box, VStack } from '@gluestack-ui/themed';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { Headline } from 'react-native-paper';\r\nimport React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet, StatusBar } from 'react-native';\r\n\r\nconst modo_oscuro = () => {\r\n  const [darkMode, setDarkMode] = useState<boolean>(false);\r\n\r\n  const toggleDarkMode = () => {\r\n    setDarkMode(prevMode => !prevMode);\r\n  };\r\n\r\n  return (\r\n    <View style={[styles.container, { backgroundColor: darkMode ? '#333' : '#fff' }]}>\r\n      <StatusBar barStyle={darkMode ? 'light-content' : 'dark-content'} />\r\n      <View style={styles.header}>\r\n        <Text style={[styles.headerText, { color: darkMode ? '#fff' : '#333' }]}>\r\n          {darkMode ? 'Modo Oscuro' : 'Modo Claro'}\r\n        </Text>\r\n        <TouchableOpacity onPress={toggleDarkMode}>\r\n          <Text style={styles.buttonText}>\r\n            {darkMode ? 'Cambiar a Modo Claro' : 'Cambiar a Modo Oscuro'}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={styles.main}>\r\n        <Text style={[styles.contentText, { color: darkMode ? '#fff' : '#333' }]}>\r\n          Contenido de la aplicaci√≥n.\r\n        </Text>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: 50,\r\n  },\r\n  header: {\r\n    padding: 20,\r\n    alignItems: 'center',\r\n  },\r\n  headerText: {\r\n    fontSize: 24,\r\n  },\r\n  buttonText: {\r\n    fontSize: 18,\r\n    color: '#007bff',\r\n    marginTop: 10,\r\n  },\r\n  main: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  contentText: {\r\n    fontSize: 20,\r\n  },\r\n});\r\n\r\nexport default modo_oscuro;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}