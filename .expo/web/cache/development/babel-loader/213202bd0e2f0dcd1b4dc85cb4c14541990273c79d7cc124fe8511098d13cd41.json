{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useContext, useState } from \"react\";\nimport useColorScheme from \"react-native-web/dist/exports/useColorScheme\";\nimport { MD2DarkTheme as PaperDarkTheme, DefaultTheme as PaperDefaultTheme } from \"react-native-paper\";\nimport { DarkTheme as NavigationDarkTheme, DefaultTheme as NavigationDefaultTheme } from \"@react-navigation/native\";\nvar lightTheme = _objectSpread(_objectSpread(_objectSpread({}, NavigationDefaultTheme), PaperDefaultTheme), {}, {\n  colors: _objectSpread(_objectSpread({}, NavigationDefaultTheme.colors), PaperDefaultTheme.colors)\n});\nvar darkTheme = _objectSpread(_objectSpread(_objectSpread({}, NavigationDarkTheme), PaperDarkTheme), {}, {\n  colors: _objectSpread(_objectSpread({}, NavigationDarkTheme.colors), PaperDarkTheme.colors)\n});\nexport var ThemeContex = React.createContext({\n  theme: lightTheme,\n  themeType: 'light',\n  isDarkTheme: false,\n  setThemeType: function setThemeType() {},\n  toggleThemeType: function toggleThemeType() {}\n});\nexport var useTheme = function useTheme() {\n  return useContext(ThemeContex);\n};\nexport var ThemeContexProvider = function ThemeContexProvider(_ref) {\n  var children = _ref.children;\n  var colorScheme = useColorScheme();\n  var _useState = useState(colorScheme || 'light'),\n    _useState2 = _slicedToArray(_useState, 2),\n    themeType = _useState2[0],\n    setThemeType = _useState2[1];\n};","map":{"version":3,"names":["React","useContext","useState","useColorScheme","MD2DarkTheme","PaperDarkTheme","DefaultTheme","PaperDefaultTheme","DarkTheme","NavigationDarkTheme","NavigationDefaultTheme","lightTheme","_objectSpread","colors","darkTheme","ThemeContex","createContext","theme","themeType","isDarkTheme","setThemeType","toggleThemeType","useTheme","ThemeContexProvider","_ref","children","colorScheme","_useState","_useState2","_slicedToArray"],"sources":["C:/Users/josue/mp5/components/modo_oscuro.tsx"],"sourcesContent":["import React,{useCallback , useContext , useMemo, useState} from \"react\";\r\nimport { useColorScheme } from \"react-native\";\r\nimport { Provider as PaperProvider, MD2DarkTheme as PaperDarkTheme, DefaultTheme as PaperDefaultTheme  } from \"react-native-paper\";\r\nimport { NavigationContainer, DarkTheme as NavigationDarkTheme, DefaultTheme as NavigationDefaultTheme } from \"@react-navigation/native\";\r\n\r\n\r\nconst lightTheme={\r\n...NavigationDefaultTheme,\r\n...PaperDefaultTheme,\r\ncolors: {\r\n    ...NavigationDefaultTheme.colors,\r\n    ...PaperDefaultTheme.colors\r\n},\r\n};\r\nconst darkTheme = {\r\n...NavigationDarkTheme,\r\n...PaperDarkTheme,\r\ncolors:{\r\n    ...NavigationDarkTheme.colors,\r\n    ...PaperDarkTheme.colors\r\n},\r\n};\r\n\r\nexport type Theme = typeof lightTheme;\r\nexport type ThemeType = 'dark'  | 'light';\r\n\r\nexport interface ThemeContextValue{\r\n    theme:Theme;\r\n    themeType:ThemeType;\r\n    isDarkTheme: boolean;\r\n    toggleThemeType: () => void;\r\n    setThemeType: React.Dispatch<React.SetStateAction<ThemeType>>;\r\n}\r\n\r\nexport const ThemeContex = React.createContext<ThemeContextValue>({\r\n    theme: lightTheme,\r\n    themeType: 'light',\r\n    isDarkTheme : false,\r\n    setThemeType: () => {},\r\n    toggleThemeType:()=>{}\r\n\r\n});\r\n\r\nexport const useTheme = () => useContext(ThemeContex);\r\n\r\nexport interface ThemeContexProviderProps{\r\n    children: React.ReactNode;\r\n}\r\n\r\nexport const ThemeContexProvider = ({children}:ThemeContexProviderProps) =>{\r\n    const colorScheme= useColorScheme();\r\n    const [themeType, setThemeType] = useState<ThemeType>(colorScheme || 'light');\r\n}"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAgBC,UAAU,EAAYC,QAAQ,QAAO,OAAO;AAAC,OAAAC,cAAA;AAEzE,SAAoCC,YAAY,IAAIC,cAAc,EAAEC,YAAY,IAAIC,iBAAiB,QAAS,oBAAoB;AAClI,SAA8BC,SAAS,IAAIC,mBAAmB,EAAEH,YAAY,IAAII,sBAAsB,QAAQ,0BAA0B;AAGxI,IAAMC,UAAU,GAAAC,aAAA,CAAAA,aAAA,CAAAA,aAAA,KACbF,sBAAsB,GACtBH,iBAAiB;EACpBM,MAAM,EAAAD,aAAA,CAAAA,aAAA,KACCF,sBAAsB,CAACG,MAAM,GAC7BN,iBAAiB,CAACM,MAAM;AAC9B,EACA;AACD,IAAMC,SAAS,GAAAF,aAAA,CAAAA,aAAA,CAAAA,aAAA,KACZH,mBAAmB,GACnBJ,cAAc;EACjBQ,MAAM,EAAAD,aAAA,CAAAA,aAAA,KACCH,mBAAmB,CAACI,MAAM,GAC1BR,cAAc,CAACQ,MAAM;AAC3B,EACA;AAaD,OAAO,IAAME,WAAW,GAAGf,KAAK,CAACgB,aAAa,CAAoB;EAC9DC,KAAK,EAAEN,UAAU;EACjBO,SAAS,EAAE,OAAO;EAClBC,WAAW,EAAG,KAAK;EACnBC,YAAY,EAAE,SAAAA,aAAA,EAAM,CAAC,CAAC;EACtBC,eAAe,EAAC,SAAAA,gBAAA,EAAI,CAAC;AAEzB,CAAC,CAAC;AAEF,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAA;EAAA,OAASrB,UAAU,CAACc,WAAW,CAAC;AAAA;AAMrD,OAAO,IAAMQ,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAAC,IAAA,EAA2C;EAAA,IAAtCC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACzC,IAAMC,WAAW,GAAEvB,cAAc,CAAC,CAAC;EACnC,IAAAwB,SAAA,GAAkCzB,QAAQ,CAAYwB,WAAW,IAAI,OAAO,CAAC;IAAAE,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtET,SAAS,GAAAU,UAAA;IAAER,YAAY,GAAAQ,UAAA;AAClC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}