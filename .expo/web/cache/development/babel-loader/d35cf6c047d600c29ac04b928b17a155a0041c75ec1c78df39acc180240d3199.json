{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\josue\\\\mp5\\\\components\\\\configuracion_usuario.tsx\",\n  _this = this;\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar lightTheme = {\n  backgroundColor: '#ffffff',\n  textColor: '#000000'\n};\nvar darkTheme = {\n  backgroundColor: '#000000',\n  textColor: '#ffffff'\n};\nvar configuracion_usuario = function configuracion_usuario() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isDarkMode = _useState2[0],\n    setIsDarkMode = _useState2[1];\n  var toggleTheme = function toggleTheme() {\n    setIsDarkMode(function (prevMode) {\n      return !prevMode;\n    });\n  };\n  var theme = isDarkMode ? darkTheme : lightTheme;\n  return _jsxDEV(View, {\n    style: [styles.container, {\n      backgroundColor: theme.backgroundColor\n    }],\n    children: [_jsxDEV(Text, {\n      style: [styles.text, {\n        color: theme.textColor\n      }],\n      children: [\"\\xA1Estoy en modo \", isDarkMode ? 'oscuro' : 'claro', \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, _this), _jsxDEV(Switch, {\n      trackColor: {\n        false: \"#767577\",\n        true: \"#81b0ff\"\n      },\n      thumbColor: isDarkMode ? \"#f5dd4b\" : \"#f4f3f4\",\n      ios_backgroundColor: \"#3e3e3e\",\n      onValueChange: toggleTheme,\n      value: isDarkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    fontSize: 20,\n    marginBottom: 20,\n    marginLeft: 1200\n  }\n});\nexport default configuracion_usuario;","map":{"version":3,"names":["React","useState","View","Text","Switch","StyleSheet","jsxDEV","_jsxDEV","lightTheme","backgroundColor","textColor","darkTheme","configuracion_usuario","_useState","_useState2","_slicedToArray","isDarkMode","setIsDarkMode","toggleTheme","prevMode","theme","style","styles","container","children","text","color","fileName","_jsxFileName","lineNumber","columnNumber","_this","trackColor","false","true","thumbColor","ios_backgroundColor","onValueChange","value","create","flex","justifyContent","alignItems","fontSize","marginBottom","marginLeft"],"sources":["C:/Users/josue/mp5/components/configuracion_usuario.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, Switch, StyleSheet } from 'react-native';\r\n\r\n// Define los colores para el tema claro y oscuro\r\nconst lightTheme = {\r\n  backgroundColor: '#ffffff',\r\n  textColor: '#000000',\r\n};\r\n\r\nconst darkTheme = {\r\n  backgroundColor: '#000000',\r\n  textColor: '#ffffff',\r\n};\r\n\r\nconst configuracion_usuario = () => {\r\n  // Estado para controlar el tema actual\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  // Función para cambiar entre el tema claro y oscuro\r\n  const toggleTheme = () => {\r\n    setIsDarkMode((prevMode) => !prevMode);\r\n  };\r\n\r\n  // Determina qué conjunto de colores usar según el tema actual\r\n  const theme = isDarkMode ? darkTheme : lightTheme;\r\n\r\n  return (\r\n    <View  style={[styles.container, { backgroundColor: theme.backgroundColor }]}>\r\n      <Text  style={[styles.text, { color: theme.textColor }]}>¡Estoy en modo {isDarkMode ? 'oscuro' : 'claro'}!</Text>\r\n      <Switch \r\n        trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n        thumbColor={isDarkMode ? \"#f5dd4b\" : \"#f4f3f4\"}\r\n        ios_backgroundColor=\"#3e3e3e\"\r\n        onValueChange={toggleTheme}\r\n        value={isDarkMode}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  text: {\r\n    fontSize: 20,\r\n    marginBottom: 20,\r\n    marginLeft:1200,\r\n  },\r\n});\r\n\r\nexport default configuracion_usuario;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIxC,IAAMC,UAAU,GAAG;EACjBC,eAAe,EAAE,SAAS;EAC1BC,SAAS,EAAE;AACb,CAAC;AAED,IAAMC,SAAS,GAAG;EAChBF,eAAe,EAAE,SAAS;EAC1BC,SAAS,EAAE;AACb,CAAC;AAED,IAAME,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAA,EAAS;EAElC,IAAAC,SAAA,GAAoCZ,QAAQ,CAAC,KAAK,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5CG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAGhC,IAAMI,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxBD,aAAa,CAAC,UAACE,QAAQ;MAAA,OAAK,CAACA,QAAQ;IAAA,EAAC;EACxC,CAAC;EAGD,IAAMC,KAAK,GAAGJ,UAAU,GAAGL,SAAS,GAAGH,UAAU;EAEjD,OACED,OAAA,CAACL,IAAI;IAAEmB,KAAK,EAAE,CAACC,MAAM,CAACC,SAAS,EAAE;MAAEd,eAAe,EAAEW,KAAK,CAACX;IAAgB,CAAC,CAAE;IAAAe,QAAA,GAC3EjB,OAAA,CAACJ,IAAI;MAAEkB,KAAK,EAAE,CAACC,MAAM,CAACG,IAAI,EAAE;QAAEC,KAAK,EAAEN,KAAK,CAACV;MAAU,CAAC,CAAE;MAAAc,QAAA,GAAC,oBAAe,EAACR,UAAU,GAAG,QAAQ,GAAG,OAAO,EAAC,GAAC;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAM,CAAC,EACjHxB,OAAA,CAACH,MAAM;MACL4B,UAAU,EAAE;QAAEC,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAE;MAAU,CAAE;MAClDC,UAAU,EAAEnB,UAAU,GAAG,SAAS,GAAG,SAAU;MAC/CoB,mBAAmB,EAAC,SAAS;MAC7BC,aAAa,EAAEnB,WAAY;MAC3BoB,KAAK,EAAEtB;IAAW;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACnB,CAAC;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACE,CAAC;AAEX,CAAC;AAED,IAAMT,MAAM,GAAGjB,UAAU,CAACkC,MAAM,CAAC;EAC/BhB,SAAS,EAAE;IACTiB,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDjB,IAAI,EAAE;IACJkB,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE,EAAE;IAChBC,UAAU,EAAC;EACb;AACF,CAAC,CAAC;AAEF,eAAejC,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}