{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\josue\\\\mp5\\\\App.tsx\",\n  _this = this;\nimport React from 'react';\nimport { GluestackUIProvider, View } from '@gluestack-ui/themed';\nimport { config } from '@gluestack-ui/config';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { DrawerItem, createDrawerNavigator } from '@react-navigation/drawer';\nimport categorias from './components/Inicio';\nimport configuracion_usuario from './components/configuracion_usuario';\nimport { useTheme } from './components/modo_oscuro';\nimport { Button, Headline } from 'react-native-paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar TestScreen = function TestScreen() {\n  var _useTheme = useTheme(),\n    toggleThemeType = _useTheme.toggleThemeType,\n    themeType = _useTheme.themeType,\n    isDarkTheme = _useTheme.isDarkTheme,\n    theme = _useTheme.theme;\n  return _jsxDEV(View, {\n    children: [_jsxDEV(Button, {\n      onPress: toggleThemeType,\n      children: \"toggle theme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 1\n    }, _this), _jsxDEV(Headline, {\n      children: themeType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 1\n    }, _this), _jsxDEV(Headline, {\n      children: [\"isDarkTheme:\", `${isDarkTheme}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 1\n    }, _this), _jsxDEV(Headline, {\n      children: [\"Primary: \", theme.colors.primary]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 1\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 1\n  }, _this);\n};\nvar Drawer = createDrawerNavigator();\nvar Mycomponent = function Mycomponent() {\n  return _jsxDEV(DrawerItem, {\n    label: \"first item\",\n    onPress: function onPress() {\n      throw new Error('Function not implemented.');\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 1\n  }, _this);\n};\nexport default function App() {\n  return _jsxDEV(NavigationContainer, {\n    children: _jsxDEV(GluestackUIProvider, {\n      config: config,\n      children: [_jsxDEV(TestScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), _jsxDEV(Drawer.Navigator, {\n        initialRouteName: \"Home\",\n        children: [_jsxDEV(Drawer.Screen, {\n          name: \"Inicio\",\n          component: categorias\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), _jsxDEV(Drawer.Screen, {\n          name: \"Configuracion\",\n          component: configuracion_usuario\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n}\n;","map":{"version":3,"names":["React","GluestackUIProvider","View","config","NavigationContainer","DrawerItem","createDrawerNavigator","categorias","configuracion_usuario","useTheme","Button","Headline","jsxDEV","_jsxDEV","TestScreen","_useTheme","toggleThemeType","themeType","isDarkTheme","theme","children","onPress","fileName","_jsxFileName","lineNumber","columnNumber","_this","colors","primary","Drawer","Mycomponent","label","Error","App","Navigator","initialRouteName","Screen","name","component"],"sources":["C:/Users/josue/mp5/App.tsx"],"sourcesContent":["import React from 'react';\nimport { GluestackUIProvider, Box, VStack, View } from '@gluestack-ui/themed';\nimport { config } from '@gluestack-ui/config';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { useNavigation } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { DrawerContent, DrawerItem, createDrawerNavigator } from '@react-navigation/drawer';\nimport categorias from './components/Inicio';\nimport configuracion_usuario from './components/configuracion_usuario';\nimport { ThemeContexProvider, useTheme } from './components/modo_oscuro';\nimport { Button, Headline } from 'react-native-paper';\n\n\nconst TestScreen = () =>{\n  const { toggleThemeType, themeType, isDarkTheme, theme } = useTheme();\n  return(\n<View>\n<Button  onPress={toggleThemeType}>\n  toggle theme\n</Button>\n<Headline>{themeType}</Headline>\n<Headline>isDarkTheme:{`${isDarkTheme}`}</Headline>\n<Headline>Primary: {theme.colors.primary}</Headline>\n</View>\n\n  );\n};\n\n\nconst Drawer = createDrawerNavigator();\n\nconst Mycomponent =()=>(\n<DrawerItem label={\"first item\"} onPress={function (): void {\n    throw new Error('Function not implemented.');\n  } }/>\n\n)\nexport default function App() {\n  \n  return( \n    \n  \n  <NavigationContainer>\n  <GluestackUIProvider config={config}>\n    <TestScreen/>\n  <Drawer.Navigator initialRouteName=\"Home\">\n      \n        <Drawer.Screen name=\"Inicio\" component={categorias}/>\n        <Drawer.Screen name=\"Configuracion\" component={configuracion_usuario}/> \n       \n      </Drawer.Navigator>\n\n\n  \n</GluestackUIProvider>\n</NavigationContainer>);\n\n\n};\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}