{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\josue\\\\mp5\\\\components\\\\TextContext.jsx\",\n  _this = this;\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ThemeContext = createContext();\nexport var useTheme = function useTheme() {\n  return useContext(ThemeContext);\n};\nexport var ThemeProvider = function ThemeProvider(_ref) {\n  var children = _ref.children;\n  var lightTheme = {\n    backgroundColor: '#ffffff',\n    textColor: '#000000'\n  };\n  var darkTheme = {\n    backgroundColor: '#000000',\n    textColor: '#ffffff'\n  };\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isDarkMode = _useState2[0],\n    setIsDarkMode = _useState2[1];\n  var toggleTheme = function toggleTheme() {\n    setIsDarkMode(function (prevMode) {\n      return !prevMode;\n    });\n  };\n  var theme = isDarkMode ? darkTheme : lightTheme;\n  return _jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme: theme,\n      toggleTheme: toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, _this);\n};","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","ThemeContext","useTheme","ThemeProvider","_ref","children","lightTheme","backgroundColor","textColor","darkTheme","_useState","_useState2","_slicedToArray","isDarkMode","setIsDarkMode","toggleTheme","prevMode","theme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_this"],"sources":["C:/Users/josue/mp5/components/TextContext.jsx"],"sourcesContent":["// TemaContext.js\r\nimport React, { createContext, useState, useContext } from 'react';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const useTheme = () => {\r\n  return useContext(ThemeContext);\r\n};\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const lightTheme = {\r\n    backgroundColor: '#ffffff',\r\n    textColor: '#000000',\r\n  };\r\n  \r\n  const darkTheme = {\r\n    backgroundColor: '#000000',\r\n    textColor: '#ffffff',\r\n  };\r\n\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  const toggleTheme = () => {\r\n    setIsDarkMode((prevMode) => !prevMode);\r\n  };\r\n\r\n  const theme = isDarkMode ? darkTheme : lightTheme;\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,IAAMC,YAAY,GAAGL,aAAa,CAAC,CAAC;AAEpC,OAAO,IAAMM,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;EAC5B,OAAOJ,UAAU,CAACG,YAAY,CAAC;AACjC,CAAC;AAED,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACtC,IAAMC,UAAU,GAAG;IACjBC,eAAe,EAAE,SAAS;IAC1BC,SAAS,EAAE;EACb,CAAC;EAED,IAAMC,SAAS,GAAG;IAChBF,eAAe,EAAE,SAAS;IAC1BC,SAAS,EAAE;EACb,CAAC;EAED,IAAAE,SAAA,GAAoCb,QAAQ,CAAC,KAAK,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5CG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAEhC,IAAMI,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxBD,aAAa,CAAC,UAACE,QAAQ;MAAA,OAAK,CAACA,QAAQ;IAAA,EAAC;EACxC,CAAC;EAED,IAAMC,KAAK,GAAGJ,UAAU,GAAGJ,SAAS,GAAGH,UAAU;EAEjD,OACEN,OAAA,CAACC,YAAY,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEF,KAAK,EAALA,KAAK;MAAEF,WAAW,EAAXA;IAAY,CAAE;IAAAV,QAAA,EAClDA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACY,CAAC;AAE5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}