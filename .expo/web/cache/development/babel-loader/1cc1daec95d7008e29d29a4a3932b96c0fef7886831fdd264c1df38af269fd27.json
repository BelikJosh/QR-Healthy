{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\josue\\\\mp5\\\\components\\\\modo_oscuro.tsx\",\n  _this = this;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useCallback, useContext, useMemo, useState } from 'react';\nimport useColorScheme from \"react-native-web/dist/exports/useColorScheme\";\nimport { Provider as PaperProvider, DarkTheme as PaperDarkTheme, DefaultTheme as PaperDefaultTheme } from 'react-native-paper';\nimport { NavigationContainer, DarkTheme as NavigationDarkTheme, DefaultTheme as NavigationDefaultTheme } from '@react-navigation/native';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar lightTheme = _objectSpread(_objectSpread(_objectSpread({}, NavigationDefaultTheme), PaperDefaultTheme), {}, {\n  colors: _objectSpread(_objectSpread({}, NavigationDefaultTheme.colors), PaperDefaultTheme.colors)\n});\nvar darkTheme = _objectSpread(_objectSpread(_objectSpread({}, NavigationDarkTheme), PaperDarkTheme), {}, {\n  colors: _objectSpread(_objectSpread({}, NavigationDarkTheme.colors), PaperDarkTheme.colors)\n});\nexport var ThemeContext = React.createContext({\n  theme: lightTheme,\n  themeType: 'light',\n  isDarkTheme: false,\n  setThemeType: function setThemeType() {},\n  toggleThemeType: function toggleThemeType() {}\n});\nexport var useTheme = function useTheme() {\n  return useContext(ThemeContext);\n};\nexport var ThemeContextProvider = function ThemeContextProvider(_ref) {\n  var children = _ref.children;\n  var colorScheme = useColorScheme();\n  var _useState = useState(colorScheme || 'light'),\n    _useState2 = _slicedToArray(_useState, 2),\n    themeType = _useState2[0],\n    setThemeType = _useState2[1];\n  var toggleThemeType = useCallback(function () {\n    setThemeType(function (prev) {\n      return prev === 'dark' ? 'light' : 'dark';\n    });\n  }, []);\n  var isDarkTheme = useMemo(function () {\n    return themeType === 'dark';\n  }, [themeType]);\n  var theme = useMemo(function () {\n    return isDarkTheme ? darkTheme : lightTheme;\n  }, [isDarkTheme]);\n  return _jsxDEV(NavigationContainer, {\n    theme: theme,\n    children: _jsxDEV(PaperProvider, {\n      theme: theme,\n      children: _jsxDEV(ThemeContext.Provider, {\n        value: {\n          theme: theme,\n          themeType: themeType,\n          isDarkTheme: isDarkTheme,\n          setThemeType: setThemeType,\n          toggleThemeType: toggleThemeType\n        },\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, _this);\n};","map":{"version":3,"names":["React","useCallback","useContext","useMemo","useState","useColorScheme","Provider","PaperProvider","DarkTheme","PaperDarkTheme","DefaultTheme","PaperDefaultTheme","NavigationContainer","NavigationDarkTheme","NavigationDefaultTheme","jsxDEV","_jsxDEV","lightTheme","_objectSpread","colors","darkTheme","ThemeContext","createContext","theme","themeType","isDarkTheme","setThemeType","toggleThemeType","useTheme","ThemeContextProvider","_ref","children","colorScheme","_useState","_useState2","_slicedToArray","prev","value","fileName","_jsxFileName","lineNumber","columnNumber","_this"],"sources":["C:/Users/josue/mp5/components/modo_oscuro.tsx"],"sourcesContent":["import React, {useCallback, useContext, useMemo, useState} from 'react';\r\nimport {useColorScheme} from 'react-native';\r\nimport {\r\n  Provider as PaperProvider,\r\n  DarkTheme as PaperDarkTheme,\r\n  DefaultTheme as PaperDefaultTheme,\r\n} from 'react-native-paper';\r\nimport {\r\n  NavigationContainer,\r\n  Theme as NavigationTheme,\r\n  DarkTheme as NavigationDarkTheme,\r\n  DefaultTheme as NavigationDefaultTheme,\r\n} from '@react-navigation/native';\r\nimport {Theme as PaperTheme} from 'react-native-paper/lib/typescript/types';\r\n\r\nexport type Theme = NavigationTheme &\r\n  PaperTheme & {\r\n    // add here extra theme props\r\n  };\r\n\r\nconst lightTheme: Theme = {\r\n  ...NavigationDefaultTheme,\r\n  ...PaperDefaultTheme,\r\n  colors: {\r\n    ...NavigationDefaultTheme.colors,\r\n    ...PaperDefaultTheme.colors,\r\n  },\r\n};\r\n\r\nconst darkTheme: Theme = {\r\n  ...NavigationDarkTheme,\r\n  ...PaperDarkTheme,\r\n  colors: {\r\n    ...NavigationDarkTheme.colors,\r\n    ...PaperDarkTheme.colors,\r\n  },\r\n};\r\n\r\nexport type ThemeType = 'dark' | 'light';\r\n\r\nexport interface ThemeContextValue {\r\n  theme: Theme;\r\n  themeType: ThemeType;\r\n  isDarkTheme: boolean;\r\n  toggleThemeType: () => void;\r\n  setThemeType: React.Dispatch<React.SetStateAction<ThemeType>>;\r\n}\r\n\r\nexport const ThemeContext = React.createContext<ThemeContextValue>({\r\n  theme: lightTheme,\r\n  themeType: 'light',\r\n  isDarkTheme: false,\r\n  setThemeType: () => {},\r\n  toggleThemeType: () => {},\r\n});\r\n\r\nexport const useTheme = () => useContext(ThemeContext);\r\n\r\nexport interface ThemeContextProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const ThemeContextProvider = ({children}: ThemeContextProviderProps) => {\r\n  const colorScheme = useColorScheme();\r\n  const [themeType, setThemeType] = useState<ThemeType>(colorScheme || 'light');\r\n\r\n  const toggleThemeType = useCallback(() => {\r\n    setThemeType(prev => (prev === 'dark' ? 'light' : 'dark'));\r\n  }, []);\r\n\r\n  const isDarkTheme = useMemo(() => themeType === 'dark', [themeType]);\r\n  const theme = useMemo(\r\n    () => (isDarkTheme ? darkTheme : lightTheme),\r\n    [isDarkTheme],\r\n  );\r\n\r\n  return (\r\n    <NavigationContainer theme={theme}>\r\n      <PaperProvider theme={theme}>\r\n        <ThemeContext.Provider\r\n          value={{\r\n            theme,\r\n            themeType,\r\n            isDarkTheme,\r\n            setThemeType,\r\n            toggleThemeType,\r\n          }}>\r\n          {children}\r\n        </ThemeContext.Provider>\r\n      </PaperProvider>\r\n    </NavigationContainer>\r\n  );\r\n};"],"mappings":";;;;;;AAAA,OAAOA,KAAK,IAAGC,WAAW,EAAEC,UAAU,EAAEC,OAAO,EAAEC,QAAQ,QAAO,OAAO;AAAC,OAAAC,cAAA;AAExE,SACEC,QAAQ,IAAIC,aAAa,EACzBC,SAAS,IAAIC,cAAc,EAC3BC,YAAY,IAAIC,iBAAiB,QAC5B,oBAAoB;AAC3B,SACEC,mBAAmB,EAEnBJ,SAAS,IAAIK,mBAAmB,EAChCH,YAAY,IAAII,sBAAsB,QACjC,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQlC,IAAMC,UAAiB,GAAAC,aAAA,CAAAA,aAAA,CAAAA,aAAA,KAClBJ,sBAAsB,GACtBH,iBAAiB;EACpBQ,MAAM,EAAAD,aAAA,CAAAA,aAAA,KACDJ,sBAAsB,CAACK,MAAM,GAC7BR,iBAAiB,CAACQ,MAAM;AAC5B,EACF;AAED,IAAMC,SAAgB,GAAAF,aAAA,CAAAA,aAAA,CAAAA,aAAA,KACjBL,mBAAmB,GACnBJ,cAAc;EACjBU,MAAM,EAAAD,aAAA,CAAAA,aAAA,KACDL,mBAAmB,CAACM,MAAM,GAC1BV,cAAc,CAACU,MAAM;AACzB,EACF;AAYD,OAAO,IAAME,YAAY,GAAGrB,KAAK,CAACsB,aAAa,CAAoB;EACjEC,KAAK,EAAEN,UAAU;EACjBO,SAAS,EAAE,OAAO;EAClBC,WAAW,EAAE,KAAK;EAClBC,YAAY,EAAE,SAAAA,aAAA,EAAM,CAAC,CAAC;EACtBC,eAAe,EAAE,SAAAA,gBAAA,EAAM,CAAC;AAC1B,CAAC,CAAC;AAEF,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAA;EAAA,OAAS1B,UAAU,CAACmB,YAAY,CAAC;AAAA;AAMtD,OAAO,IAAMQ,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAAC,IAAA,EAA8C;EAAA,IAAzCC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAC5C,IAAMC,WAAW,GAAG3B,cAAc,CAAC,CAAC;EACpC,IAAA4B,SAAA,GAAkC7B,QAAQ,CAAY4B,WAAW,IAAI,OAAO,CAAC;IAAAE,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtET,SAAS,GAAAU,UAAA;IAAER,YAAY,GAAAQ,UAAA;EAE9B,IAAMP,eAAe,GAAG1B,WAAW,CAAC,YAAM;IACxCyB,YAAY,CAAC,UAAAU,IAAI;MAAA,OAAKA,IAAI,KAAK,MAAM,GAAG,OAAO,GAAG,MAAM;IAAA,CAAC,CAAC;EAC5D,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMX,WAAW,GAAGtB,OAAO,CAAC;IAAA,OAAMqB,SAAS,KAAK,MAAM;EAAA,GAAE,CAACA,SAAS,CAAC,CAAC;EACpE,IAAMD,KAAK,GAAGpB,OAAO,CACnB;IAAA,OAAOsB,WAAW,GAAGL,SAAS,GAAGH,UAAU;EAAA,CAAC,EAC5C,CAACQ,WAAW,CACd,CAAC;EAED,OACET,OAAA,CAACJ,mBAAmB;IAACW,KAAK,EAAEA,KAAM;IAAAQ,QAAA,EAChCf,OAAA,CAACT,aAAa;MAACgB,KAAK,EAAEA,KAAM;MAAAQ,QAAA,EAC1Bf,OAAA,CAACK,YAAY,CAACf,QAAQ;QACpB+B,KAAK,EAAE;UACLd,KAAK,EAALA,KAAK;UACLC,SAAS,EAATA,SAAS;UACTC,WAAW,EAAXA,WAAW;UACXC,YAAY,EAAZA,YAAY;UACZC,eAAe,EAAfA;QACF,CAAE;QAAAI,QAAA,EACDA;MAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACY;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACX;EAAC;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACG,CAAC;AAE1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}