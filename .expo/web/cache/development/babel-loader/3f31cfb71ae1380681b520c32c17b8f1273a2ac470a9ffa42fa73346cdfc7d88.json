{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\josue\\\\mp5\\\\components\\\\configuracion_usuario.tsx\",\n  _this = this;\nimport { Text, View } from '@gluestack-ui/themed';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar lightTheme = {\n  backgroundColor: '#ffffff',\n  textColor: '#000000'\n};\nvar darkTheme = {\n  backgroundColor: '#000000',\n  textColor: '#ffffff'\n};\nvar App = function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isDarkMode = _useState2[0],\n    setIsDarkMode = _useState2[1];\n  var toggleTheme = function toggleTheme() {\n    setIsDarkMode(function (prevMode) {\n      return !prevMode;\n    });\n  };\n  var theme = isDarkMode ? darkTheme : lightTheme;\n  return _jsxDEV(View, {\n    style: [styles.container, {\n      backgroundColor: theme.backgroundColor\n    }],\n    children: [_jsxDEV(Text, {\n      style: [styles.text, {\n        color: theme.textColor\n      }],\n      children: [\"\\xA1Estoy en modo \", isDarkMode ? 'oscuro' : 'claro', \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, _this), _jsxDEV(Switch, {\n      trackColor: {\n        false: \"#767577\",\n        true: \"#81b0ff\"\n      },\n      thumbColor: isDarkMode ? \"#f5dd4b\" : \"#f4f3f4\",\n      ios_backgroundColor: \"#3e3e3e\",\n      onValueChange: toggleTheme,\n      value: isDarkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    fontSize: 20,\n    marginBottom: 20\n  }\n});\nexport default App;","map":{"version":3,"names":["Text","View","React","jsxDEV","_jsxDEV","lightTheme","backgroundColor","textColor","darkTheme","App","_useState","useState","_useState2","_slicedToArray","isDarkMode","setIsDarkMode","toggleTheme","prevMode","theme","style","styles","container","children","text","color","fileName","_jsxFileName","lineNumber","columnNumber","_this","Switch","trackColor","false","true","thumbColor","ios_backgroundColor","onValueChange","value","StyleSheet","create","flex","justifyContent","alignItems","fontSize","marginBottom"],"sources":["C:/Users/josue/mp5/components/configuracion_usuario.tsx"],"sourcesContent":["import { Button, Text, View, useTheme } from '@gluestack-ui/themed';\r\n\r\nimport React from 'react';\r\nimport { GluestackUIProvider, Box, VStack } from '@gluestack-ui/themed';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { Headline } from 'react-native-paper';\r\nimport modo from './modo_oscuro';\r\n\r\n\r\n// Define los colores para el tema claro y oscuro\r\nconst lightTheme = {\r\n  backgroundColor: '#ffffff',\r\n  textColor: '#000000',\r\n};\r\n\r\nconst darkTheme = {\r\n  backgroundColor: '#000000',\r\n  textColor: '#ffffff',\r\n};\r\n\r\nconst App = () => {\r\n  // Estado para controlar el tema actual\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  // Función para cambiar entre el tema claro y oscuro\r\n  const toggleTheme = () => {\r\n    setIsDarkMode((prevMode) => !prevMode);\r\n  };\r\n\r\n  // Determina qué conjunto de colores usar según el tema actual\r\n  const theme = isDarkMode ? darkTheme : lightTheme;\r\n\r\n  return (\r\n    <View style={[styles.container, { backgroundColor: theme.backgroundColor }]}>\r\n      <Text style={[styles.text, { color: theme.textColor }]}>¡Estoy en modo {isDarkMode ? 'oscuro' : 'claro'}!</Text>\r\n      <Switch\r\n        trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n        thumbColor={isDarkMode ? \"#f5dd4b\" : \"#f4f3f4\"}\r\n        ios_backgroundColor=\"#3e3e3e\"\r\n        onValueChange={toggleTheme}\r\n        value={isDarkMode}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  text: {\r\n    fontSize: 20,\r\n    marginBottom: 20,\r\n  },\r\n});\r\n\r\nexport default App;\r\n"],"mappings":";;;AAAA,SAAiBA,IAAI,EAAEC,IAAI,QAAkB,sBAAsB;AAEnE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ1B,IAAMC,UAAU,GAAG;EACjBC,eAAe,EAAE,SAAS;EAC1BC,SAAS,EAAE;AACb,CAAC;AAED,IAAMC,SAAS,GAAG;EAChBF,eAAe,EAAE,SAAS;EAC1BC,SAAS,EAAE;AACb,CAAC;AAED,IAAME,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAEhB,IAAAC,SAAA,GAAoCC,QAAQ,CAAC,KAAK,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAA5CI,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAGhC,IAAMI,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxBD,aAAa,CAAC,UAACE,QAAQ;MAAA,OAAK,CAACA,QAAQ;IAAA,EAAC;EACxC,CAAC;EAGD,IAAMC,KAAK,GAAGJ,UAAU,GAAGN,SAAS,GAAGH,UAAU;EAEjD,OACED,OAAA,CAACH,IAAI;IAACkB,KAAK,EAAE,CAACC,MAAM,CAACC,SAAS,EAAE;MAAEf,eAAe,EAAEY,KAAK,CAACZ;IAAgB,CAAC,CAAE;IAAAgB,QAAA,GAC1ElB,OAAA,CAACJ,IAAI;MAACmB,KAAK,EAAE,CAACC,MAAM,CAACG,IAAI,EAAE;QAAEC,KAAK,EAAEN,KAAK,CAACX;MAAU,CAAC,CAAE;MAAAe,QAAA,GAAC,oBAAe,EAACR,UAAU,GAAG,QAAQ,GAAG,OAAO,EAAC,GAAC;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAM,CAAC,EAChHzB,OAAA,CAAC0B,MAAM;MACLC,UAAU,EAAE;QAAEC,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAE;MAAU,CAAE;MAClDC,UAAU,EAAEpB,UAAU,GAAG,SAAS,GAAG,SAAU;MAC/CqB,mBAAmB,EAAC,SAAS;MAC7BC,aAAa,EAAEpB,WAAY;MAC3BqB,KAAK,EAAEvB;IAAW;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACnB,CAAC;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACE,CAAC;AAEX,CAAC;AAED,IAAMT,MAAM,GAAGkB,UAAU,CAACC,MAAM,CAAC;EAC/BlB,SAAS,EAAE;IACTmB,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDnB,IAAI,EAAE;IACJoB,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEF,eAAenC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}