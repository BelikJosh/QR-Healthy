{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\josue\\\\mp5\\\\App.tsx\";\nimport React from 'react';\nimport { GluestackUIProvider, View } from '@gluestack-ui/themed';\nimport { config } from '@gluestack-ui/config';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { useNavigation } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport categorias from './components/categorias';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomeScreen() {\n  var navigation = useNavigation();\n  return _jsxDEV(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n}\nvar Drawer = createDrawerNavigator();\nexport default function App() {\n  return _jsxDEV(NavigationContainer, {\n    children: _jsxDEV(GluestackUIProvider, {\n      config: config,\n      children: _jsxDEV(Drawer.Navigator, {\n        initialRouteName: \"Home\",\n        children: [_jsxDEV(Drawer.Screen, {\n          name: \"Home\",\n          component: HomeScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this), _jsxDEV(Drawer.Screen, {\n          name: \"NAv\",\n          component: categorias\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n}\n;","map":{"version":3,"names":["React","GluestackUIProvider","View","config","NavigationContainer","useNavigation","createDrawerNavigator","categorias","jsxDEV","_jsxDEV","HomeScreen","navigation","style","flex","alignItems","justifyContent","fileName","_jsxFileName","lineNumber","columnNumber","Drawer","App","children","Navigator","initialRouteName","Screen","name","component"],"sources":["C:/Users/josue/mp5/App.tsx"],"sourcesContent":["import React from 'react';\nimport { GluestackUIProvider, Box, VStack, View } from '@gluestack-ui/themed';\nimport { config } from '@gluestack-ui/config';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { useNavigation } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport categorias from './components/categorias';\n\nfunction HomeScreen() {\n  const navigation = useNavigation();\n  return <View style={{\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }}></View>\n}\n\nconst Drawer = createDrawerNavigator();\nexport default function App() {\n  return <NavigationContainer>\n  <GluestackUIProvider config={config}>\n  <Drawer.Navigator initialRouteName=\"Home\">\n        {/*Este metodo tambien lo podemos usar para la navegacion, pero el <Drawer.Screen name=\"NAv\" component={Navigation_tab}/>  es mucho mas eficiente*/}\n        <Drawer.Screen name=\"Home\" component={HomeScreen}/>\n         \n        <Drawer.Screen name=\"NAv\" component={categorias}/> \n       {/* <Drawer.Screen name=\"NAv\" component={Navigation_tab}/> Tambien se puede invocar el tab en el Drawe de esta manera, asi optimizando el codigo*/}\n        \n        \n\n      </Drawer.Navigator>\n  \n</GluestackUIProvider>\n</NavigationContainer>;\n  /*<GluestackUIProvider config={config}>\n    <VStack space=\"md\" reversed={false} backgroundColor='$black' alignItems='center'>\n      <Box w={500} h={500} bg=\"#0C0C0C\" marginTop={15} borderWidth={'$1'} borderColor='cyan' marginBottom={200} >\n\n      <Button action={\"primary\"} bg=\"$cyan400\" variant={\"solid\"} size={\"lg\"}  w={80} isDisabled={false}  >\n        <ButtonText>\n          Button\n        </ButtonText>\n      </Button>\n</Box>\n    </VStack>\n  </GluestackUIProvider>;*/\n\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,EAAeC,IAAI,QAAQ,sBAAsB;AAC7E,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,aAAa,QAAQ,0BAA0B;AAExD,SAASC,qBAAqB,QAAQ,0BAA0B;AAChE,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,UAAUA,CAAA,EAAG;EACpB,IAAMC,UAAU,GAAGN,aAAa,CAAC,CAAC;EAClC,OAAOI,OAAA,CAACP,IAAI;IAACU,KAAK,EAAE;MAClBC,IAAI,EAAE,CAAC;MACPC,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE;IAClB;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC;AACZ;AAEA,IAAMC,MAAM,GAAGd,qBAAqB,CAAC,CAAC;AACtC,eAAe,SAASe,GAAGA,CAAA,EAAG;EAC5B,OAAOZ,OAAA,CAACL,mBAAmB;IAAAkB,QAAA,EAC3Bb,OAAA,CAACR,mBAAmB;MAACE,MAAM,EAAEA,MAAO;MAAAmB,QAAA,EACpCb,OAAA,CAACW,MAAM,CAACG,SAAS;QAACC,gBAAgB,EAAC,MAAM;QAAAF,QAAA,GAEnCb,OAAA,CAACW,MAAM,CAACK,MAAM;UAACC,IAAI,EAAC,MAAM;UAACC,SAAS,EAAEjB;QAAW;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,EAEnDV,OAAA,CAACW,MAAM,CAACK,MAAM;UAACC,IAAI,EAAC,KAAK;UAACC,SAAS,EAAEpB;QAAW;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKlC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AActB;AAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}